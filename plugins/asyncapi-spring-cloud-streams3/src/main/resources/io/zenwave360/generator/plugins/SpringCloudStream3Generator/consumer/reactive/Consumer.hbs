package {{generator.apiPackage}};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageHeaders;
import org.springframework.stereotype.Component;

import java.util.function.Consumer;

{{#if generator.modelPackage}}
import {{generator.modelPackage}}.*;
{{/if}}

@Component("{{operation.operationIdKebabCase}}")
public class {{operation.operationIdCamelCase}} implements I{{operation.operationIdCamelCase}} {

    {{#each operation.messages as |message|}}
    @Autowired
    private I{{operation.operationIdCamelCase}.{{message.name} {{message.name?uncap_first}};

    {{/each}}

    @Override
    public void accept(Message<?> message) {
        Object payload = message.getPayload();
        {{#each operation.messages as |message|}}
        if(payload instanceof {{message.paramType}}) {
            <#assign messageType = exposeMessage?string('Message<' + message.paramType + '>', message.paramType)>
            {{message.name?uncap_first}.accept(Flux.just((<{{messageType}>) payload));
            return;
        }
        {{/each}}
    }
}